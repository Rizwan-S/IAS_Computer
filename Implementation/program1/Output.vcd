$date
	Tue Sep  1 19:58:46 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 1 ! endit $end
$var reg 1 " clk $end
$scope module Implementation $end
$var wire 1 " clk $end
$var reg 40 # AC [0:39] $end
$var reg 20 $ IBR [0:19] $end
$var reg 8 % IR [0:7] $end
$var reg 12 & MAR [0:11] $end
$var reg 40 ' MBR [0:39] $end
$var reg 40 ( MQ [0:39] $end
$var reg 12 ) PC [0:11] $end
$var reg 1 * decode $end
$var reg 1 ! endit $end
$var reg 1 + execute $end
$var reg 1 , fetch1 $end
$var reg 1 - incrementpc $end
$var reg 1 . jumpright $end
$var reg 1 / left $end
$var reg 80 0 mul [0:79] $end
$var reg 1 1 rightleft $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
01
bx 0
0/
0.
1-
0,
0+
0*
b111111111111 )
bx (
bx '
bx &
bx %
bx $
bx #
1"
0!
$end
#5000
1,
b0 )
0-
0"
#10000
b100000000010100000110000000000110 '
b0 &
1"
#15000
1*
0,
0"
#20000
b101 &
b1 %
b110000000000110 $
1/
1"
#25000
1+
0*
0"
#30000
b111 #
b111 '
1"
#35000
11
0/
0+
0"
#40000
b110 &
b110 %
1"
#45000
1+
01
0"
#50000
b101 #
b10 '
1"
#55000
1-
0+
0"
#60000
1"
#65000
1,
b1 )
0-
0"
#70000
b111100000000001100000001000000000101 '
b1 &
1"
#75000
1*
0,
0"
#80000
b11 &
b1111 %
b1000000000101 $
1/
1"
#85000
1+
0*
0"
#90000
b10 )
0/
1"
#95000
1-
0+
0"
#100000
1"
#105000
1,
b11 )
0-
0"
#110000
b100000000010100000110000000000110 '
1"
#115000
1*
0,
0"
#120000
b101 &
b1 %
b110000000000110 $
1/
1"
#125000
1+
0*
0"
#130000
b111 #
b111 '
1"
#135000
11
0/
0+
0"
#140000
b110 &
b110 %
1"
#145000
1+
01
0"
#150000
b101 #
b10 '
1"
#155000
1-
0+
0"
#160000
1"
#165000
1,
b100 )
0-
0"
#170000
b10000100000000100011111111000000000000 '
b100 &
1"
#175000
1*
0,
0"
#180000
b1000 &
b100001 %
b11111111000000000000 $
1/
1"
#185000
1+
0*
0"
#190000
b101 '
1"
#195000
11
0/
0+
0"
#200000
b0 &
b11111111 %
1"
#205000
1+
01
0"
#210000
1!
1"
#215000
1-
0+
0"
